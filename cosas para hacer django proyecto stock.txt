40 error
25 exitoso

* Ver si usar Clases en Las vistas y en que casos.
* Arreglar el navbar al loggearse.
* Pensar lo de clases y vistas para el indice despues del loggeo.
* Maquetar por encima la muestra de stock.
* ver como usar context_processors.

* Formulario 1:

* Añaidr Stock-Paso_1:
** Name
** Image
** principal_file

* Añadir Stock-Paso_2:
** name_column
** price_column
** quantity_column

* Editar Stock (image-name):
** Name
** Image

-----------------------------------------------------------------------------
*SuperUsuario - Carlos: 12345


* Cosas a realizar:
*hacer productos en base a la tabla del stock añadido.

*añadir favicon
*añadir meta:info a la pagina.
*Al seleccionar el texto se le puede cambiar el estilo, con el selector universal de CSS.
*El modo de editar, se hace desde el navbar.
*El modo de eliminar productos, exportar tabla a csv, o generar respaldos, se hace tambien desde el navbar.
*Los filtros se hacen desde un boton flotante y arrastrable.
*Al usar el modo de edicion solo se añade content editable y un boton de guardado (aunque puede mutar despendiendo de la visualizacion, aunque aún siendo un cambio asincrono con JS).
* Los filtros se escogen y recargan la pagina (con una consulta GET, para que el usuario pueda guardar esa configuración).
-------------------
Proximo
*Añadir boton de añadir imagenes en grupo y de añadir producto a producto.
Hecho:
*****Las formas de ver la tabla se hacen desde el navbar.

--------------------
Modificar el admin:
*Que se vean los productos en los stocks.
*Que no se ve avaliable en los productos, dado a que se asigna automaticamente (no tiene sentido mostrarlo).

*El boton de filtros sera flotante y desaparecera al presionar en el ojo anti-distracciones de la barra de navegacion.
* El modo de edicion creara un boton en la seccion donde se añadian stock para añadir todas las imagenes, y otro para guardar los cambios, ambos juntos.[Parcialmente hecho]
* El modo eliminar sera con seleccion multiple, panel de pregunta antes de eliminar, y un boton en donde estaba añadir stock para eliminar.[HECHO]

**hacer una app propia para los respaldos y relacionarla uno a uno con los stocks. --> exportar a csv
------------------------------------------
*Hecho lo de editar, pero no los respaldos.
*hecho lo del eliminar pero no los respaldos.
**El backup necesita ser pensado con más detalla.
**Al regresar el internet debe darse el siguiente orden de desarrollo:
***importar/actualizar imagenes.[HECHO]
***exportar csv (del estado actual del stock), desde /stock/
***respaldos/backups (investigar como mutar o crear nuevos productos, etc); configurar los backups.
***Captcha autogenerado para el registro.(probar la lectura del captcha con inteligencias artificiales para hacerlo lo suficientemente robusto y claro).
***Adaptación a responsive.
***boton flotante de filtros (es sencillo y en javascript, pero requiere manejo distinto en cursor y en movil, lo de cursor no funciona en celular y lo de movil probablemente no funcione en pc)

****mensaje de importacion correcta.[HECHO]
****ver como guardar multiples cambios en una sola llamada, en lugar de multiples. Tambien se puede refactorizar la eliminación y la edición. [tanto los metodos bulk, como update, no usan save y por tanto tampoco señales, además al no usar save, no sirve update_to para los archivos o imagenes, esto implica que debe verse otro enfoque distinto a las señales si se necesita mayor velocidad][No Realizable]
****ver las imagenes de zip.[HECHO]
****ver la compresión de imagenes.[HECHO]


**Se pueden realizar validaciones del zip desde el form y sus validaciones. Aquí podemos analizar el nombre y el peso de las imagenes.[HECHO]
**Carpeta temporal, dentro otra carpeta con el nombre zip-images-[numero-aleatorio], en ella descomprimir el zip, comprobar las imagenes, una a una, con pillow y verify, además de usar contettype para almacenarlas, luego borrar toda la carpeta temporal (zip-images-[numero-aleatorio]). Hacer esto tambien en caso de que haya algun error.[HECHO]
------------------------------------------------------------------------
*usar una señal pre_save para que antes de guardar la imagen, se comprima (puede ser en una carpeta temporal, luego reemplazar la original, tomando la ruta de la instancia)[HECHO: no hay necesidad de reemplazar la original, solo crear un file object temporal][HECHO]

*revisar compresion y verificación de imagenes en todas las imagenes no solo productos.[HECHO]

--------------------------------------------------------------------------------
****integrar lo de borrar archivos o previos[esto despues de ver como se hacen los respaldos][idea: se remplazan con las nuevas, se hacen los respaldos respectivos, y al renovar el primer respaldo, se borran las imagenes, antes de reemplazarlo, hay que tomar en cuenta que las imagenes y la edicion son distintos procesos, por lo que puede advertirse que las imagenes no se preservan, hay mucho que pensar].

---
***exportar csv (del estado actual del stock), desde /stock/ [HECHO]

-----------------------------------------------------------------------------------------
***respaldos/backups (investigar como mutar o crear nuevos productos, etc); configurar los backups.[HECHO]

**implementar el borrado de imagenes, y el borrado de directorios (random), de los backup y los demás elementos. Conviene borrar todos los stock y volver a empezar.[HECHO]
**falta implementar el modo de seleccionar respaldos, pero primero veremos que guarde bien los backup y borre los archivos residuales.[Revisar]
*probar en la shell el borrado de Filesystem de directorios vacios.[HECHO, sí funciona]

**eliminar imagenes de productos, las podemos extraer de los respaldos, al eliminar el stock.[HECHO]
-----------------------------------------------------------------------------------------------------------------------------------
***Captcha autogenerado para el registro.(probar la lectura del captcha con inteligencias artificiales para hacerlo lo suficientemente robusto y claro).[HECHO]
***Adaptación a responsive.
***boton flotante de filtros (es sencillo y en javascript, pero requiere manejo distinto en cursor y en movil, lo de cursor no funciona en celular y lo de movil probablemente no funcione en pc)
***Completar el como usar, contacto y el modo de invitado.
-------------------------------------------------------------------------------------------------------------------------------
*modificar el captcha generador, crear uno temporal, ver si se puede mostrar imagen temporal, usar para pasar dato, crear imagen y renderizar. Luego se valida.
*se usa base64, temporatry file y .seek(0)[HECHO]
-------------------------------------------------------------------------------------------------------------------------------
***Adaptación a responsive.
*Primera parte: [barra de navegación-superior]









